<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAYxJREFUeF7t
        mltqwzAQRb2gQhfTPz8W0M8020i74GCajsJcEKYydmJppMk9IAiOYXSO7RBCOkIIIYQQQsguxnF815fm
        FN+LDPwZhuG37/tPPWRG2IPu5VsP5UWGXWTddJlGgHy0n4u+lYdpmt5kyBwNDGuWjQx6SjFk7hhmR/u4
        7yXsUU/Jg9z+HzLouhhc9E7458qHdQ1701PyYhnBXB5YRKhGHpSMUJ08KBGhWnmQM0L18iBHhGbkwZER
        mpMHR0RoVh48E6F5efBIBDfyYE8Ed/JgSwS38mAtgnt5kIqgKz7mTx4kIsTLrzzQCMsfMm7yKMzu5QOJ
        Zz6sTd8TmmZFHstvhIR8eBSWj4O/CAn5+wde4oPRT4Q1eT1l05elJtkiD9xF2CMP3ER4RB40H+EZedBs
        hCPkQXMRjpQHzUTIIQ+qj5BTHlQboYQ8qC5CSXlQTQQLeWAewVIemEXgX2QEqf8VDSx65Zcs7wS5ECd9
        Ky8y7GwtD6IIZz1UBhn8un+UJIQQQgghpHW67g8m5MbHxgYItAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGQAAABkCAYAAABw4pVUAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAM+SURBVHhe7dy7axRhGMXhrFdUvJWWFmppoY2VAauAlgEn2V3CIiuCpk0wRtdCTCLiXeMlJuIN
        bNTETsFGCRH9C8Tezk5sXD1DXmX98s14Yb+djfN74BTKvDA5rzPjuoMdAAAAAAAAAAAAAAAAAAAgA9Vq
        dXWxWNyubLLfQha6u7uX9vb2jiqflW+Wl6VSabMdglaxZdxvWERj3mspa+xQhBYvQ7ene55F/ExPT88h
        Oxwh1Wq1JSr7jm8JTiZsBKHYMm57yl8QHXfWxhBIQSXf9JXvST2Kol02hwAKemZc9xSflDGbQ7PFtykV
        POkUnhhdRadsFM1my5hwS0/JaRtFs8XL0G3qlqd0b3TsiI0igIJKvuGWnpIL8cz8KJrtbx/gF+OZ+VE0
        nR7K5z2le6NjL2mEZYSiks+5pafkskZYRijxJ2tP6Um5ohGWEYqeGWc8pXujY69qhGWEopLH3NJTck0j
        LCMU3aZOeEpPyrhGWEYouvUMe0pPylT8QdFG0WwqeMgpPC2zWt5BXU3VRZ795XJ5q1XQPnRi/Sq57pSe
        p8z09fVtsDqypZMZdE4ul9EVP22VZEdXxkDjSenXv5xk3qKff4tV03o6gT1Knm9TCxJF0T6rJxPxv96O
        uyeV5+gK2WHdZMO+bJpyTyyneadKsv9M1dnZuUwPtEeeE8xTPqiDbVZJ9uyNw7vOSaZlTj/AyH+SA/F7
        yFZF+/iHpYzaKEL5zbu5C6I/XTUbRSi2lAdu+Sk5bqMIxV6cfugp3xsdO2yjCEUPuuX6e/lj3wJ80bHH
        bBShxEtR2U/c8lMyZKMIRbevFSr6qVN8YnT7OmqjCCVeioqe9i0gIYM2ilDsSplxik+MnikDNopQbCnP
        3PITUtdS+m0UoXR1da1U2X+8FOWIjSIUXSmrVPTzhuLTUtfz57CNIpRKpbJWZb9yyk/KVy2lbKMIxZby
        2infGz1PvijZfUWaFyp7nTLbWH5KTtoYQtIzZb3KnnPK92XSRhBa/F6TCn/jLMANHxhbSc+IjSr9rbOE
        H/mkBzv/M1Cr2e3rhbOMj1EU7bZDkIFCqVTaqUVUlL1t+Z01AAAAAAAAAAAAAAAAAADAItfR8R1srQvu
        EUxb9AAAAABJRU5ErkJggg==
</value>
  </data>
</root>